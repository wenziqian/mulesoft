<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="750f0f36-758d-40c0-925e-14967a7ee1e7" >
		<http:listener doc:name="GET /flights" doc:id="29c57c07-13b8-4c0e-9b86-b122c361e625" config-ref="HTTP_Listener_config" path="/flights" allowedMethods="GET" >
			<http:response statusCode="#[vars.httpStatus default 200]" />
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body ><![CDATA[#[payload]]]></http:body>
			</http:error-response>
		</http:listener>
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="852bf8d2-f9bd-4fe0-9d6b-84656d9456c0" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="de040a64-b078-4bab-a25b-b2d37de4113a" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="a83f80f9-c22a-4e30-9c0c-5101e2fa6996" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]"/>
		<choice doc:name="Choice" doc:id="b81c10b5-13f0-4fc5-8936-8ccd90df34f1" >
			<when expression='vars.airline=="american"'>
				<flow-ref doc:name="getAmericanFlights" doc:id="aef169f2-c709-4373-9250-f9a4d5f67a85" name="getAmericanFlights"/>
			</when>
			<when expression='vars.airline=="united"'>
				<flow-ref doc:name="getUnitedFlights" doc:id="a5378667-9dc8-43bd-963c-7d3c731b394d" name="getUnitedFlights"/>
			</when>
			<when expression='vars.airline=="delta"'>
				<flow-ref doc:name="getDeltaFlights" doc:id="32cb0b31-554b-49e6-b8bc-5d26a1123a5d" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="e3a93a9c-c211-4b27-a328-9f964e7d2602" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="92c8032e-0f3a-4191-828b-707fee1a83ff">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="bfd82ec5-516b-4e42-a34c-62848ecac53a" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="e0529d9f-dd70-48f7-8d4d-7868c2d06f34" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="No flights" doc:id="7c0e9605-b06e-4575-a73c-7bd7b3f8d35c" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="34b795d0-d679-4900-bad5-c6b61716033f" variableName="httpStatus"/>
			</on-error-propagate>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="1b2c6f04-09f2-4ed8-9489-cad1c6996b28" type="VALIDATION:INVALID_BOOLEAN">
				<ee:transform doc:name="error.description" doc:id="d6a675b7-a721-4851-b863-e51df642848b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="400" doc:name="httpStatus" doc:id="77a32366-a0bb-464d-9041-d9cfea58d25d" variableName="httpStatus"/>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getAllAirlineFlights" doc:id="d27b5d30-835b-4b78-a930-ee4e00b1d697" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="cdfce0d9-2eec-4e3c-8570-d0f06d158e0f" >
			<route >
				<try doc:name="Try" doc:id="36297ae4-3b3d-4602-9829-deb9dfbe7f12" >
					<flow-ref doc:name="getAmericanFlights" doc:id="4ef41941-3abf-46a0-9223-3e6cc52bb3c8" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="b8d1f116-fa70-408b-9246-3cf77958a786" type="ANY">
							<ee:transform doc:name="[]" doc:id="a9503f56-b085-455a-a5a8-36ec3fc41d89" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="30bf5d5b-c3b2-4b05-b4b0-0632991f66bb" >
					<flow-ref doc:name="getUnitedFlights" doc:id="aaf15504-2271-4848-bdbe-a09380682472" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="07cc53a1-0d11-4a9e-90d0-af126219b109" type="ANY">
							<ee:transform doc:name="[]" doc:id="fa7378e4-cc69-4e94-b15a-073c854d4daa" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<logger level="INFO" doc:name="Logger" doc:id="3f82831d-6b78-4ce5-b549-53258ffbf638" />
	</flow>
	<sub-flow name="setCode" doc:id="08d6c224-d79d-48f4-9ecf-8a4ef57536aa" >
		<set-variable value="#[message.attributes.queryParams.code]" doc:name="code" doc:id="d320d25f-a6cd-4221-a7ee-a2eb9c2315cf" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="e2b788ab-bb83-476c-a51f-55cbc4b5940e" >
		<american-flights-api:get-flights doc:name="Get flights" doc:id="5e8d977f-343b-4dd4-8bc9-58939aa6491d" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flight]" doc:id="dcafa70e-6334-443d-b2bb-073c65ac1250" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="84df79f6-863e-4fe6-ae4e-e7c10bd0459f" />
	</flow>
	<flow name="getUnitedFlights" doc:id="4f2c1fef-d081-448b-8fcb-0151f4b2091f" >
		<http:request method="GET" doc:name="Get flights" doc:id="3893487a-0408-4767-a932-7d981d1f282b" config-ref="HTTP_Request_config_training" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="027986d3-d9b3-4be5-b8e3-2f0aa3c8e733" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="8fc666c6-a1bf-4bbd-8584-78a755a1123a" />
	</flow>
	<flow name="getDeltaFlights" doc:id="89775851-6f3c-49fb-b929-a59c68b915e1" >
		<ee:transform doc:name="Pass code" doc:id="59f3c40b-de43-4578-b230-e1a895e4fc70" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="ea15e390-db4c-4441-b4c9-00bb0f7d7dbe" config-ref="Delta_Web_Service_Consumer_Config"/>
		<ee:transform doc:name="Soap to [Flight]" doc:id="06ae63c9-0f76-4b4d-a19b-8428cdd32ecb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="1c482225-596b-40e4-b62b-246b33ce3319" />
	</flow>
	<flow name="postFlight" doc:id="b0ef377e-f4cf-4cfb-8d72-4b34d6a358f2" >
		<ee:transform doc:name="Transform Message" doc:id="6940afdc-092b-42d4-9d32-da852f125e0a" >
			<ee:message >
				<ee:set-payload resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
data: {
	hub: "MUA",
	flight @(airline: payload.airline):{
		code: payload.toAirportCode
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="299845e3-6ac8-43c6-a395-7dc8c02f80c6" message="#[vars.DWoutput]"/>
	</flow>
	<flow name="postMultipleFlights" doc:id="ad83faa6-87e0-4dd5-b640-1343ffa284db" >
		<http:listener doc:name="POST /multipleflights" doc:id="2e0fbec8-6c69-4f88-aa0c-cfc36519b833" config-ref="HTTP_Listener_config" path="/multipleflights" allowedMethods="POST"/>
		<ee:transform doc:name="Transform Message" doc:id="578dc05e-9e1a-4831-be05-df389117139f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import dasherize from dw::core::Strings
type Currency = String {format: "###.00"}
type Flight = Object {class: "com.mulesoft.training.Flight"}
// var numSeats = 400
// var numSeats = (x=400) -> x
/*var numSeats = (planeType: String) ->
	if(planeType contains('737'))
		150
	else
		300
		*/
fun getNumSeats(planeType: String)= do{
	var maxSeats = 
	if(planeType contains('737'))
		150
	else
		300
	---
	maxSeats
}
---
flights: (payload..*return map(object, index) -> {
				destination: object.destination,
				price: object.price as Number as Currency,
//				totalSeats: getNumSeats(object.planeType as String),
//				totalSeats: lookup("getTotalSeats", {planeType: object.planeType}),
				planeType: dasherize(replace(object.planeType,/(Boing)/) with "Boeing"),
				departureDate: object.departureDate as Date {format: "yyyy/MM/dd"} as String {format: "yyyy年MM月dd日"},
				availableSeats: object.emptySeats as Number
	} as Flight) distinctBy $ filter($.availableSeats !=0) orderBy $.departureDate orderBy $.price]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="4572bd09-cb7e-4cee-87fd-7d0aadbbc462" />
	</flow>
	<flow name="getTotalSeats" doc:id="66ab3109-802e-4a50-947c-8604c714c676" >
		<ee:transform doc:name="Transform Message" doc:id="e16cf2e5-2bb0-4679-919d-46a559affc0b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
//output application/java
output application/dw
fun getNumSeats(planeType: String)= do{
	var maxSeats = 
	if(planeType contains('737'))
		150
	else
		300
	---
	maxSeats
}
var arr = [
	{
		"price": 541,
		"toAirport": "LAX"
	},
	{
		"price": 300,
		"toAirport": "CLE"
	},
	{
		"price": 200,
		"toAirport": "CLE"
	},
	{
		"price": 220,
		"toAirport": "SFO"
	}
]
var employees = [
	{
		"employee1":{
			"firstName": "Aanya",
			"lastName": "Anand",
			"details": {
				"dept": "Engineering",
				"region": "APAC"
			}
		},
		"employee2":{
			"firstName": "Bob",
			"lastName": "Brown",
			"details": {
				"dept": "Marketing",
				"region": "USA"
			}
		}
	}
]
---
//getNumSeats(payload.planeType)
// arr filter $.price < 500 orderBy $.price groupBy $.toAirport 
employees:
	employee
	@(
		firstName: payload[0].employee1.firstName[0],
		lastName: payload[0].employee1.lastName[0]
	) : null]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
